generator client {
  provider = "prisma-client-js"
}
// postgresql://postgres:FgjEsNqsAqSJrrHcxFFmkqwYCPaWQJdh@autorack.proxy.rlwy.net:41108/railway
datasource db {
  provider = "postgresql" // 或者您使用的数据库类型
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
  @@map("accounts")
}
 
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@map("sessions")
}
 
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  accounts      Account[]
  sessions      Session[]
  tasks         Task[]
 
  @@map("users")
}
 
model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@unique([identifier, token])
  @@map("verification_tokens")
}

enum TaskType {
  TEXT2IMG
  IMG2IMG
  AVATAR
}

enum TaskStatus {
  pending
  processing
  success
  error
}

model Task {
  id          String     @id @default(cuid())
  type        TaskType
  status      TaskStatus @default(pending)
  requestId   String @default("none") // modellabs的requestId
  fetchUrl    String?
  futureLinks String[] // 未来可能的图片链接
  prompt      String?    @db.Text
  initImage   String?    // 初始图片的URL，用于img2img
  outputImage String[]    // 生成的图片URL
  modelId     String?    // 使用的模型ID
  settings    Json?      // 其他设置参数，如尺寸、步数等
  error       String?    @db.Text
  
  // 时间戳
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  
  // 关联用户
  userId      String
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([type])
  @@index([status])
  @@map("tasks")
}